******************************************One-One relationship****************************************

# Create a Managers Table

CREATE TABLE Managers (
    manager_id INT PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    email VARCHAR(255),
    phone_number VARCHAR(15),
    hire_date DATE,
    salary DECIMAL(10, 2)
);

# Insert 5 manager data into Managers table

INSERT INTO Managers (manager_id, first_name, last_name, email, phone_number, hire_date, salary)
VALUES
    (1, 'RMohanRaj', 'RMR', 'rmr@example.com', '555-777-8888', '2018-12-01', 90000.00),
    (2, 'Senthil', 'Kumar', 'mark@example.com', '555-222-3333', '2017-08-15', 95000.00),
    (3, 'Ranjeet', 'Sanglee', 'emily@example.com', '555-444-5555', '2019-02-25', 88000.00),
    (4, 'Karney', 'Sudhagar', 'michael@example.com', '555-111-2222', '2021-07-05', 80000.00),
    (5, 'Rajaram', 'varsha', 'linda@example.com', '555-666-7777', '2020-04-10', 92000.00);

# create a Employees Table

CREATE TABLE Employees (
    employee_id INT PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    email VARCHAR(255),
    phone_number VARCHAR(15),
    hire_date DATE,
    salary DECIMAL(10, 2),
    manager_id INT,
    FOREIGN KEY (manager_id) REFERENCES Employees(employee_id)
);

# Insert 5 employees data into Employees Table

INSERT INTO Employees (employee_id, first_name, last_name, email, phone_number, hire_date, salary, manager_id)
VALUES
    (1, 'John', 'Doe', 'john@example.com', '555-123-4567', '2020-01-15', 60000.00, 1),
    (2, 'Sriram', 'Smith', 'jane@example.com', '555-987-6543', '2019-05-20', 75000.00, 2),
    (3, 'Mary', 'Johnson', 'mary@example.com', '555-555-5555', '2021-03-10', 55000.00, 3),
    (4, 'Michael', 'Williams', 'michael@example.com', '555-111-2222', '2021-07-05', 80000.00, 5),
    (5, 'Emily', 'Anderson', 'emily@example.com', '555-333-4444', '2018-11-28', 72000.00, 4);

Hereby we are obtaining One-to-one relationship.

mysql> select * from managers;
+------------+------------+-----------+---------------------+--------------+------------+----------+
| manager_id | first_name | last_name | email               | phone_number | hire_date  | salary   |
+------------+------------+-----------+---------------------+--------------+------------+----------+
|          1 | RMohanRaj  | RMR       | rmr@example.com     | 555-777-8888 | 2018-12-01 | 90000.00 |
|          2 | Senthil    | Kumar     | mark@example.com    | 555-222-3333 | 2017-08-15 | 95000.00 |
|          3 | Ranjeet    | Sanglee   | emily@example.com   | 555-444-5555 | 2019-02-25 | 88000.00 |
|          4 | Karney     | Sudhagar  | michael@example.com | 555-111-2222 | 2021-07-05 | 80000.00 |
|          5 | Rajaram    | varsha    | linda@example.com   | 555-666-7777 | 2020-04-10 | 92000.00 |
+------------+------------+-----------+---------------------+--------------+------------+----------+
5 rows in set (0.00 sec)

mysql> select * from employees;
+-------------+------------+-----------+---------------------+--------------+------------+----------+------------+
| employee_id | first_name | last_name | email               | phone_number | hire_date  | salary   | manager_id |
+-------------+------------+-----------+---------------------+--------------+------------+----------+------------+
|           1 | John       | Doe       | john@example.com    | 555-123-4567 | 2020-01-15 | 60000.00 |          1 |
|           2 | Sriram     | Smith     | jane@example.com    | 555-987-6543 | 2019-05-20 | 75000.00 |          2 |
|           3 | Mary       | Johnson   | mary@example.com    | 555-555-5555 | 2021-03-10 | 55000.00 |          1 |
|           4 | Michael    | Williams  | michael@example.com | 555-111-2222 | 2021-07-05 | 80000.00 |          3 |
|           5 | Emily      | Anderson  | emily@example.com   | 555-333-4444 | 2018-11-28 | 72000.00 |          5 |
+-------------+------------+-----------+---------------------+--------------+------------+----------+------------+

**************************************************One-Many relationship***********************************************

# Create a customers table

CREATE TABLE Customers (
    customer_id INT PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    email VARCHAR(255)
);

# Insert 5 customers data into Customers table.

INSERT INTO Customers (customer_id, first_name, last_name, email)
VALUES
    (1, 'John', 'Doe', 'john@example.com'),
    (2, 'Jane', 'Smith', 'jane@example.com'),
    (3, 'Mary', 'Johnson', 'mary@example.com'),
    (4, 'Michael', 'Williams', 'michael@example.com'),
    (5, 'Emily', 'Anderson', 'emily@example.com');

# Create a Orders table

CREATE TABLE Orders (
    order_id INT PRIMARY KEY,
    order_date DATE,
    total_amount DECIMAL(10, 2),
    customer_id INT,
    FOREIGN KEY (customer_id) REFERENCES Customers(customer_id)
);

# Insert 5 orders data into Orders table.

INSERT INTO Orders (order_id, order_date, total_amount, customer_id)
VALUES
    (101, '2021-01-15', 100.00, 1),
    (102, '2021-02-20', 75.50, 1),
    (103, '2021-03-10', 50.25, 2),
    (104, '2021-04-05', 120.00, 3),
    (105, '2021-05-12', 30.75, 1);

In this case Customers table is called Parent tabe and orders table is called Child table.
"A customer(One) can place multiple orders(Many), But a order corresponds to one user only"

mysql> select * from customers; 
+-------------+------------+-----------+---------------------+
| customer_id | first_name | last_name | email               |
+-------------+------------+-----------+---------------------+
|           1 | John       | Doe       | john@example.com    |
|           2 | Jane       | Smith     | jane@example.com    |
|           3 | Mary       | Johnson   | mary@example.com    |
|           4 | Michael    | Williams  | michael@example.com |
|           5 | Emily      | Anderson  | emily@example.com   |
+-------------+------------+-----------+---------------------+
5 rows in set (0.00 sec)

mysql> select * from orders;
+----------+------------+--------------+-------------+
| order_id | order_date | total_amount | customer_id |
+----------+------------+--------------+-------------+
|      101 | 2021-01-15 |       100.00 |           1 |
|      102 | 2021-02-20 |        75.50 |           1 |
|      103 | 2021-03-10 |        50.25 |           2 |
|      104 | 2021-04-05 |       120.00 |           3 |
|      105 | 2021-05-12 |        30.75 |           1 |
+----------+------------+--------------+-------------+


******************************************Many-to-Many relationship****************************************

Many-to-many relationship, multiple records in one table are associated with multiple records in another table.
It's a bit more complex than one-to-many relationships and often requires the use of an intermediate table, 
also known as a junction table or bridge table, to manage the relationship.

# Create a Students table

CREATE TABLE Students (
    student_id INT PRIMARY KEY,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    email VARCHAR(255)
);

# Insert 5 students data into Orders table.

INSERT INTO Students (student_id, first_name, last_name, email)
VALUES
    (1, 'John', 'Doe', 'john@example.com'),
    (2, 'Jane', 'Smith', 'jane@example.com'),
    (3, 'Mary', 'Johnson', 'mary@example.com'),
    (4, 'Michael', 'Williams', 'michael@example.com'),
    (5, 'Emily', 'Anderson', 'emily@example.com');

# Create a Courses table

CREATE TABLE Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(255),
    course_description TEXT
);

# Insert 5 students data into Courses table.

INSERT INTO Courses (course_id, course_name, course_description)
VALUES
    (101, 'Mathematics 101', 'Introduction to Math'),
    (102, 'History 202', 'World History'),
    (103, 'Computer Science 301', 'Data Structures'),
    (104, 'English 101', 'Introduction to English Literature'),
    (105, 'Physics 202', 'Classical Mechanics');

# Create a Enrollments table

CREATE TABLE Enrollments (
    enrollment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

# Insert 5 enrollments into enrollments table.

INSERT INTO Enrollments (enrollment_id, student_id, course_id)
VALUES
    (1, 1, 101),
    (2, 1, 102),
    (3, 2, 102),
    (4, 2, 103),
    (5, 3, 101),
    (6, 3, 103);


mysql> select * from students;
+------------+------------+-----------+---------------------+
| student_id | first_name | last_name | email               |
+------------+------------+-----------+---------------------+
|          1 | John       | Doe       | john@example.com    |
|          2 | Jane       | Smith     | jane@example.com    |
|          3 | Mary       | Johnson   | mary@example.com    |
|          4 | Michael    | Williams  | michael@example.com |
|          5 | Emily      | Anderson  | emily@example.com   |
+------------+------------+-----------+---------------------+

mysql> select * from courses;
+-----------+----------------------+------------------------------------+
| course_id | course_name          | course_description                 |
+-----------+----------------------+------------------------------------+
|       101 | Mathematics 101      | Introduction to Math               |
|       102 | History 202          | World History                      |
|       103 | Computer Science 301 | Data Structures                    |
|       104 | English 101          | Introduction to English Literature |
|       105 | Physics 202          | Classical Mechanics                |
+-----------+----------------------+------------------------------------+

mysql> select * from enrollments;
+---------------+------------+-----------+
| enrollment_id | student_id | course_id |
+---------------+------------+-----------+
|             1 |          1 |       101 |
|             2 |          1 |       102 |
|             3 |          2 |       102 |
|             4 |          2 |       103 |
|             5 |          3 |       101 |
|             6 |          3 |       103 |
+---------------+------------+-----------+



